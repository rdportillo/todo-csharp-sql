name: Build Project

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main
  workflow_dispatch: 

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  versioning:
    runs-on: ubuntu-latest
    name: Versioning Project

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
      
      - uses: codacy/git-version@2.8.0
        id: version
        with:
          release-branch: main
          prefix: v

      - name: Tag the repository
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "::notice:: ${{ steps.version.outputs.version }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global user.name "${{ github.actor }}"
          git tag -a ${{ steps.version.outputs.version }} -m "Release ${{ steps.version.outputs.version }}"
          git push --tags
        if: github.ref == 'refs/heads/main'
  
  backend-build-and-test:
    needs: versioning
    runs-on: ubuntu-latest
    name: Backend Build and Test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'
          cache: true
          cache-dependency-path: ./src/**/packages.lock.json

      - name: DotNet Restore
        run: |
          dotnet restore ./src/Todo.Api.sln 
        
      - name: DotNet Build
        run: |
          dotnet build --no-restore --configuration Release ./src/Todo.Api.sln

      - name: DotNet Test
        run: |
          dotnet test --no-restore --no-build ./src/Todo.Api.sln --configuration Release --logger trx --results-directory "TestResults"

      - uses: actions/upload-artifact@v4
        with:
          name: dotnet-test-results
          path: TestResults
      
  frontend-build-and-test:
    needs: versioning
    runs-on: ubuntu-latest
    name: Frontend Build and Test
    defaults:
      run:
        working-directory: ./src/web

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm
          cache-dependency-path: ./src/web

      - name: Node Install dependencies
        run: | 
          npm ci

      - name: Node Test
        run: | 
          npm run lint

      - name: Node Build
        run: | 
          npm run build

  backend-lint:
    needs: versioning
    runs-on: ubuntu-latest
    name: Backend Lint
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # super-lint needs the full git history to get the list of files that changed across commits
          fetch-depth: 0
      
      - uses: github/super-linter@v6
        env:
          DEFAULT_BRANCH: "main"
          VALIDATE_ALL_CODEBASE: "false"
          VALIDATE_YAML: "true"
          VALIDATE_CSHARP: "true"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  frontend-lint:
    needs: versioning
    runs-on: ubuntu-latest
    name: Frontend Lint
    defaults:
      run:
        working-directory: ./src/web
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm
          cache-dependency-path: ./src/web

      - name: Node Install dependencies
        run: | 
          npm ci

      - name: Node Test
        run: | 
          npm run lint
  
  dependency-check:
    # Requires the repository is public or GitHub Advanced Security licensed 
    if: false
    needs: versioning
    runs-on: ubuntu-latest
    name: Dependency Check
    permissions:
      contents: read
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          comment-summary-in-pr: always